
type AcctPayload struct {
	ID         string `json:"id"`
	Name       string `json:"name"`
	Token      string `json:"token"`
	Status     string `json:"status"`
	CreateDate int64  `json:"createdate"`
	DeleteDate int64  `json:"deletedate"`
}

type TokenRef struct {
  TokenID   string `json: id`
  AcctID    string `json: acctid`
}

type FileSysRef struct {
  FSID    string  `json: id`
  AcctID  string  `json: acctid`
}

type FileSysAttr struct {
  Attr   string  `json: attr`
  Value  string  `json: value`
  FSID   string  `json: fsid`
}

type AddrRef struct {
  Addr    string   `json: addr`
  FSID    string   `json: fsid`
}

type FileSystem struct {
	FSID		string
	Name		string
	Status	string
	Addrs		[]map string
}


============================================================

CREATE a file system
  Token. Name

// Verify token
  read /token Token
    grab acct.ID
  read /acct acct.ID
    grab acct.Token
  if Token == acct.Token continue else os.Exit(1)

// Write out file system entry set
FSID = new uuid
write /fs 								FSID						FileSysRef
write /acct/acctID				FSID						FileSysRef
write /fs/FSID						acctID					FileSysAttr
write /fs/FSID						Name						FileSysAttr
write /fs/FSID						active					FilesysAttr

return FSID
-----------------------------------------------------


GRANT an ip address to a file system
  Token, FSID, Addr

// Verify token
read /token Token
  grab acct.ID
read /acct acct.ID
  grab acct.Token
if Token == acct.Token true else os.Exit(1)

// Write an file system entry for the addr
write /fs/FSID/addr			addr						AddrRef

return FSID
------------------------------------------


REVOKE an ip address to a file system
  Token, FSID, Addr

// Verify token
read /token Token
  grab acct.ID
read /acct acct.ID
  grab acct.Token
if Token == acctid.Token true else os.Exit(1)

// Delete an file system entry for the addr
delete /fs/FSID/addr			addr						AddrRef

return FSID
-------------------------------------------


SHOW a file system
  Token, FSID

// Verify token
read /token Token
  grab acct.id
read /acct acct.ID
  grab acct.Token
if Token == acct.Token true else os.Exit(1)

// Read list of granted ip addresses
group-lookup printf("/fs/%s/addr", FSID)

// Read the file system attributes
group-lookup /fs			FSID
	Iterate over all the atributes

return FileSystem
------------------------------------


LIST file systems for an account
  Token

// Verify token
read /token [token id]
  grab account id
read /acct [account id]
  grab token
if [token id] == [account id].[token] true else os.Exit(1)

// Do a SHOW for each file system listed

return FileSystems
----------------------------------------


UPDATE file system
NOT IMPLEMENTED
------------------


DELETE file system
NOT IMPLEMENTED
------------------
